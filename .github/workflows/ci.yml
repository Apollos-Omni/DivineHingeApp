name: DivineHinge CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

env:
  NODE_VERSION: "20.19.2"
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  # Public runtime env (safe to ship to clients).
  EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
  EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
  EXPO_PUBLIC_SUPABASE_FUNCTIONS_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_FUNCTIONS_URL }}

jobs:
  checks-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Verify EXPO_TOKEN exists
        run: |
          if [ -z "${EXPO_TOKEN}" ]; then
            echo "Missing EXPO_TOKEN secret."; exit 1
          fi

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Generate .env for checks
        run: |
          cat <<EOF > .env
          EXPO_PUBLIC_SUPABASE_URL=${EXPO_PUBLIC_SUPABASE_URL}
          EXPO_PUBLIC_SUPABASE_ANON_KEY=${EXPO_PUBLIC_SUPABASE_ANON_KEY}
          EXPO_PUBLIC_SUPABASE_FUNCTIONS_URL=${EXPO_PUBLIC_SUPABASE_FUNCTIONS_URL}
          EOF

      - name: Install deps
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Expo Doctor (non-interactive)
        run: npx expo-doctor --non-interactive || true

      - name: Summary
        if: always()
        run: |
          {
            echo "## Checks (Linux)";
            echo "- Node: ${{ env.NODE_VERSION }}";
            echo "- typecheck, lint done";
          } >> $GITHUB_STEP_SUMMARY

  checks-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      # Guard against rare git(128) on hosted Windows
      - name: Git safe.directory + info
        shell: pwsh
        run: |
          git config --global --add safe.directory "$env:GITHUB_WORKSPACE"
          git --version

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Generate .env for checks (Windows)
        shell: pwsh
        run: |
          "EXPO_PUBLIC_SUPABASE_URL=$env:EXPO_PUBLIC_SUPABASE_URL`nEXPO_PUBLIC_SUPABASE_ANON_KEY=$env:EXPO_PUBLIC_SUPABASE_ANON_KEY`nEXPO_PUBLIC_SUPABASE_FUNCTIONS_URL=$env:EXPO_PUBLIC_SUPABASE_FUNCTIONS_URL" | Out-File -FilePath .env -Encoding ascii

      - name: Install deps
        run: npm ci
        shell: pwsh

      - name: Typecheck
        run: npm run typecheck
        shell: pwsh

      - name: Lint
        run: npm run lint
        shell: pwsh

  build-android-preview:
    name: EAS Build (Android preview)
    needs: [checks-linux, checks-windows]
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - run: npm ci

      - uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ env.EXPO_TOKEN }}

      # Env is already available from top-level 'env', so EAS picks it up.
      - name: Trigger EAS build
        id: eas
        run: |
          set -e
          JSON=$(eas build --platform android --profile preview --non-interactive --no-wait --json)
          echo "json=$JSON" >> $GITHUB_OUTPUT
          URL=$(node -e "const a=JSON.parse(process.argv[1]); console.log(a[0].webUrl)" "$JSON")
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "$JSON" > eas-android.json

      - uses: actions/upload-artifact@v4
        with:
          name: eas-android-preview
          path: eas-android.json

      - name: Summarize
        run: |
          echo "## ðŸ“¦ Android EAS Build" >> $GITHUB_STEP_SUMMARY
          echo "- Link: ${{ steps.eas.outputs.url }}" >> $GITHUB_STEP_SUMMARY
